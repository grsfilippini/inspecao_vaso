<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-4 text-gray-800"> <%= action_messege %> </h1>
</div>

<!-- Se tiver algum erro dentro de @admin, erro devido a processo de salvamento por exemplo, entra no alerta abaixo -->
<% if @vaso.errors.any? %>
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button>        
        <ul>
            <% @vaso.errors.full_messages.each do |message| %>
            <li> <%= message -%> </li>
            <% end %>
        </ul>
    </div>
<% end %>


<!-- CONTAINER PARA O FORM -->
<div class="container">
    <div class="card o-hidden border-0 shadow-lg my-5">
        <div class="card-body p-0">
            <!-- Nested Row within Card Body -->
            <div class="row">
                <!-- div class="col-lg-5 d-none d-lg-block bg-register-image"></div -->
                
                <div class="col-lg-12">

                    <div class="p-5">

                        <%= form_with(model: [ :inspetors_backoffice, @vaso ], local: true, html:{ multipart: true }, id: "form_vaso") do |form| %>
                                                                                    
                            <fieldset class="Vaso_identificacao">
                            <legend>Identificação do vaso</legend>
                            
                                
                                <fieldset class="Foto_Plaqueta">
                                <legend>Foto da plaqueta</legend>
                                    <div class="form-group row">
                                        <% if @vaso.foto_plaqueta.present? %>
                                            <div class="form-label col-sm-3 mb-0 mb-sm-0">
                                            <img src="data:image/jpeg;base64,<%= Base64.encode64(@vaso.foto_plaqueta) %>" width="auto" height="150">
                                            </div>
                                        <% end %>
                                        <div class="form-label col-sm-3 mb-0 mb-sm-0">                                    
                                            <%= form.file_field :foto_plaqueta, id: 'foto-plaqueta-input', class: 'input-file', accept: "image/*" %>
                                        </div>
                                        <div class="form-label col-sm-3 mb-0 mb-sm-0">  
                                            <img id="foto-plaqueta-preview" src="#" alt="Preview da Foto" style="display: none; max-width: 200px; max-height: 200px;" />
                                        </div>
                                    </div>

                                    <script>
                                        document.addEventListener('DOMContentLoaded', function() {
                                        var fileInput = document.getElementById('foto-plaqueta-input');
                                        var previewImage = document.getElementById('foto-plaqueta-preview');

                                        fileInput.addEventListener('change', function(event) {
                                            var file = event.target.files[0];
                                            var reader = new FileReader();

                                            reader.onload = function() {
                                            previewImage.src = reader.result;
                                            previewImage.style.display = 'block';
                                            }

                                            if (file) {
                                            reader.readAsDataURL(file);
                                            }
                                        });
                                        });                                    
                                    </script>
                                </fieldset>

                                
                                
                                <div class="form-group row">
                                    <%= form.label :num_serie, "# série", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-2 mb-3 mb-sm-0">                                        
                                        <%= form.text_field :num_serie, class: "form-control", id: "SerieMTP" %>
                                    </div>

                                    <%if @vaso.id.blank? %>
                                        <div class="col-sm-2 mb-3 mb-sm-0">
                                            <%= form.check_box :proximomtp, class: "form-check-input", id: "ProximoMTPCheckbox" %>
                                            <%= form.label :proximomtp, "<< Próximo MTP", class: "form-check-label", for: "ProximoMTPCheckbox" %>
                                        </div>
                                    <%else%>
                                        <div class="col-sm-2 mb-3 mb-sm-0">                                        
                                        </div>
                                    <%end%>

                                    <script>
                                        // Captura o checkbox e o campo de texto
                                        var proximoMTPCheckbox = document.getElementById('ProximoMTPCheckbox');
                                        var serieTextField = document.getElementById('SerieMTP');

                                        // Adiciona um evento de clique ao checkbox
                                        proximoMTPCheckbox.addEventListener('change', () => {                                
                                            // Se o checkbox estiver marcado, faz a chamada AJAX para obter a série do último registro                                    
                                            if (proximoMTPCheckbox.checked) {
                                                
                                                //alert('O checkbox está marcado!');
                                                fetch('/inspetors_backoffice/obter_ultima_serie_mtp') // Substitua o caminho pela rota correta em seu aplicativo
                                                .then(response => response.json())
                                                .then(data => {
                                                    // Atualiza o valor do campo de texto com a série obtida
                                                    serieTextField.value = data.serie;
                                                    serieTextField.readOnly = true; // Desabilita o campo
                                                })
                                            
                                            } else {                                        
                                                serieTextField.value = '';
                                                serieTextField.readOnly = false; 
                                            }
                                        });
                                    </script>
                                    
                                </div>  
                                                                                      

                                <div class="form-group row">
                                    <%= form.label :fabricante_id, "Fabricante", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                        
                                        <%= form.collection_select(:fabricante_id, @fabricantes, :id, :nome_curto, { include_blank: true }, {selected: nil, class: "form-control"}) %>
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :proprietaria_id, "Proprietária", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        <%= form.collection_select(:proprietaria_id, @proprietarias, :id, :nome_curto, {include_blank: true }, {selected: nil, class: "form-control"}) %>
                                    </div>                            
                                </div>
                                    
                                <div class="form-group row">
                                    <%= form.label :tag_proprietaria, "Tag proprietária", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        <%= form.text_field :tag_proprietaria, {class: "form-control"} %>
                                    </div>                                    
                                </div>

                                <div class="form-group row">
                                    <%= form.label :observacoes, "Obs.", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                        
                                        <%= form.text_area :observacoes, {class: "form-control"} %>
                                    </div>
                                </div>
                                    
                            </fieldset>
                            
                            <fieldset class="Vaso_caracteristicas">
                            <legend>Características</legend>
                            
                                <div class="form-group row">
                                    <%= form.label :dt_fabricacao_reconstituicao, "Dt fabric./reconst.", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-3 mb-3 mb-sm-0">
                                        <%= form.date_field :dt_fabricacao_reconstituicao, class: "form-control" %>
                                    </div>
                                    
                                    <div class="form-check col-sm-4 mb-0 mb-sm-0 d-inline">
                                        <%= form.check_box :bsem_data_fabricacao, class: "form-check-input", id: "DataDescCheckbox"%>
                                        <%= form.label :bsem_data_fabricacao, "Desconhecida", class: "form-check-label", for: "DataDescCheckbox" %>
                                    </div>
                                </div>
                                
                                <div class="form-group row">                                    
                                    <%= form.label :tipo_vaso_id, "Tipo vaso", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        <%= form.collection_select(:tipo_vaso_id, @tipo_vasos, :id, :tipo_vaso, {include_blank: 'Selecione um tipo de vaso'}, {selected: nil, class: "form-control"}) %>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <%= form.label :tipo_compressor_id, "Tipo compressor", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                    
                                        <%= form.collection_select :tipo_compressor_id, @tipo_compressors, :id, :tipo_compressor, {include_blank: 'Selecione um tipo de compressor'}, {selected: nil, class: "form-control"} %>
                                    </div>
                                </div>
                                    
                                <div class="form-group row">                                    
                                    <%= form.label :tipo_dreno_id, "Tipo dreno", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                    
                                        <%= form.collection_select :tipo_dreno_id, @tipo_drenos, :id, :tipo_dreno, {include_blank: 'Selecione um tipo de dreno'}, {selected: nil, class: "form-control"} %>
                                    </div>
                                </div>
                                
                                <div class="form-group row">                                    
                                    <%= form.label :tipo_dispositivo_seguranca_id, "Tipo disp. seg.", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                    
                                        <%= form.collection_select :tipo_dispositivo_seguranca_id, @tipo_dispositivo_segurancas, :id, :nome, {include_blank: 'Selecione um tipo de disp. de seg.'}, {selected: nil, class: "form-control"} %>
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :setor_instalacao_vaso, "Setor instalação", {class: "col-sm-2 col-form-label text-sm-left text-lg-right"} %>
                                    <div class="col-sm-4 mb-3 mb-sm-0">                                        
                                        <%= form.text_field :setor_instalacao_vaso, {class: "form-control"} %>
                                    </div>
                                </div>
                                
                            </fieldset>
                               
                            <fieldset class="Vaso_projeto">
                            <legend>Dados de projeto e operação</legend>
                                <div class="form-group row">
                                    <%= form.label "Volume [l]", class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">   
                                        <input type="number" step="1" min="0" class="form-control text-sm-left text-lg-right" id="volume_litros">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <%= form.label :volume, "[m<sup>3</sup>]".html_safe, class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :volume, step: 0.001, min: 0.000, class: "form-control", id: "volume_m3", readonly: true %>
                                    </div>
                                </div>

                                <div class="form-group row">                                    
                                    <%= form.label "Estimado", "Estimado [m<sup>3</sup>]".html_safe, class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                        
                                        <input type="number" step="0.001" min="0.000" class="form-control" id="volume_estimado" name="volume_estimado" readonly="readonly">
                                    </div>
                                </div>   

                                <script>
                                    document.addEventListener("DOMContentLoaded", function() {
                                        var volumeLitrosInput = document.getElementById("volume_litros");
                                        var volumeM3Input = document.getElementById("volume_m3");
                                
                                        volumeLitrosInput.addEventListener("input", function() {
                                            var valor = volumeLitrosInput.value;
                                            var valorM3 = valor / 1000; // Divide o valor por 1000
                                            volumeM3Input.value = valorM3;
                                        });
                                    });
                                </script>

                                <div class="form-group row">
                                    <div class="col-sm-2 mb-3 mb-sm-0">
                                        <h6><span class="badge badge-secondary">Pressões</span></h6>
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :pmta_original, 'PMTA orig.[MPa]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :pmta_original, step: 0.001, min: -10,  class: "form-control", id: "pmta_original" %>
                                    </div>                                    
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :pth_original, 'PTH orig.[MPa]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :pth_original, step: 0.001, min: -10,  class: "form-control", id: "pth_original" %>
                                    </div>                                    
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-2 mb-3 mb-sm-0">
                                        <h6><span class="badge badge-secondary">Dimensões</span></h6>
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :perimetro_diametro_externo, 'Perímetro [cm]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :perimetro_diametro_externo, step: 0.1, min: 0,  class: "form-control", id: "perimetro" %>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <%= form.label :entre_soladas_corpo, 'Entre soldas [cm]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :entre_soladas_corpo, step: 0.1, min: 0,  class: "form-control" %>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <%= form.label :profundidade_tampo, 'Profun. tampo [cm]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :profundidade_tampo, step: 0.1, min: 0,  class: "form-control" %>
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <%= form.label :diametro_externo_corpo, 'Diâm. externo [cm]', class: "col-sm-2 col-form-label text-sm-left text-lg-right" %>
                                    <div class="col-sm-2 mb-2 mb-sm-0">                                                                         
                                        <%= form.number_field :diametro_externo_corpo, step: 0.1, min: 0,  class: "form-control", id: "diametro" %>
                                    </div>                                    
                                </div>

                                <!-- Atualiza diâmetro caso perímetro seja alterado -->
                                <%# if !@vaso.id.present? %>
                                    <script>
                                        document.addEventListener("DOMContentLoaded", function() {
                                            var perimetroInput = document.getElementById("perimetro");                                            
                                            var diametroInput = document.getElementById("diametro");
                                    
                                            perimetroInput.addEventListener("input", function() {
                                                var perimetro = perimetroInput.value;
                                                var diametro = perimetro / Math.PI;
                                                var diametroArredondado = Math.round(diametro * 10)/10
                                                diametroInput.value = diametroArredondado;
                                            });
                                        });
                                    </script>
                                <%# end %>

                                <!-- Atualiza perímetro caso diâmetro seja alterado -->
                                <% if !@vaso.id.present? %>
                                    <script>
                                        document.addEventListener("DOMContentLoaded", function() {
                                            var perimetroInput = document.getElementById("perimetro");                                            
                                            var diametroInput = document.getElementById("diametro");
                                    
                                            diametroInput.addEventListener("input", function() {
                                                var diametro = diametroInput.value;
                                                var perimetro = diametro * Math.PI;
                                                var perimetroArredondado = Math.round(perimetro * 10)/10
                                                perimetroInput.value = perimetroArredondado;
                                            });
                                        });
                                    </script>
                                <% end %>

                                <!--
                                if (VolumeM3 = 0) AND (PerimetroDiametroExterno > 0) AND (EntreSoldasCorpo > 0) AND (ProfundidadeTampo >0) then
                                    Raio = PerimetroDiametroExterno/(2*PI) - 0.4 ' desconta espessura média de 4 mm
                                    Area = PI*Raio*Raio
                                    Comprimento = EntreSoldasCorpo + 2*ProfundidadeTampo*0.8 'Adota 80% do tampo como cilindro reto
                                    VolumeM3 = Area * Comprimento * 0.000001 ' Calcula o volume em cm3 e transforma para m3
                                    
                                    ' Seta volume em M3 no edit
                                    main_form.updateDouble(ncolVolumeM3, VolumeM3)
                                endif
                                -->
                                <!-- Calcula o campo :volume quando dimensões forem alteradas -->
                                <script>
                                document.addEventListener('DOMContentLoaded', function() {
                                    const perimetroDiametroExterno = document.getElementById('perimetro');
                                    const entreSoladasCorpo = document.getElementById('vaso_entre_soladas_corpo');
                                    const profundidadeTampo = document.getElementById('vaso_profundidade_tampo');
                                    const volume = document.getElementById('volume_estimado');

                                    function updateVolume() {
                                        const perimetroValue = parseFloat(perimetroDiametroExterno.value) || 0;
                                        const entreSoladasValue = parseFloat(entreSoladasCorpo.value) || 0;
                                        const profundidadeValue = parseFloat(profundidadeTampo.value) || 0;
                                        //const volumeValue = parseFloat(volume.value) || 0;

                                        //console.log(perimetroValue)
                                        //console.log(entreSoladasValue)
                                        //console.log(profundidadeValue)
                                        //console.log(volumeValue)

                                        if (entreSoladasValue > 0 && perimetroValue > 0) {
                                            const pi = Math.PI
                                            // Cálculo em cm
                                            // Calcula o raio e desconta espessura média de 4 mm
                                            const raioInterno = perimetroValue/(2*pi) - 0.4 
                                            // calcula a área da base do cilindro
                                            const areaBase = pi*(raioInterno**2)
                                            // Adota 80% do tampo como cilindro reto
                                            const comprimentoCilindro = entreSoladasValue + 2*profundidadeValue*0.8 
                                            // Calcula o volume em cm3 e transforma para m3
                                            const novoVolume = areaBase * comprimentoCilindro * 0.000001
                                                                                        
                                            volume.value = novoVolume.toFixed(3);
                                            //console.log(novoVolume)
                                        }
                                    }

                                    perimetroDiametroExterno.addEventListener('input', updateVolume);
                                    entreSoladasCorpo.addEventListener('input', updateVolume);
                                    profundidadeTampo.addEventListener('input', updateVolume);
                                });
                                </script>

                            </fieldset>
                            
                            <hr>
                            
                            <button type="submit" class="btn btn-primary"><%=t('botoes.gravar')%></button>
                            <%= button_tag "Cancelar", type: "button", class: "btn btn-secondary", onclick: "window.history.back();" %>
                            
                        <% end %>                                                                     
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> <!-- FIM DO CONTAINER DO FORM -->

<script>
// Usado na restrição de tamanho das imagens carregadas
    // Redimensiona a imagem
    document.getElementById('form_vaso').addEventListener('submit', function(event) {
        event.preventDefault();

        let form = this;
        let inputs = ['foto-plaqueta-input'];
        let promises = [];

        inputs.forEach(function(id) {
            let input = document.getElementById(id);
            if (input && input.files[0]) {
                promises.push(resizeImage(input.files[0], 1600, 1200, 0.75).then(blob => {
                    let newFile = new File([blob], input.files[0].name, {type: blob.type});
                    let container = new DataTransfer();
                    container.items.add(newFile);
                    input.files = container.files;
                }));
            }
        });

        Promise.all(promises).then(() => {
            form.submit();
        }).catch(error => {
            console.error("Erro ao processar imagens: ", error);
            alert('Houve um erro ao processar as imagens. Por favor, tente novamente.');
        });
    });

    // Usado na restrição de tamanho das imagens carregadas
    // Redimensiona a imagem
    function resizeImage(file, maxWidth, maxHeight, quality) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onload = function(event) {
                const img = new Image();
                img.onload = function() {
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');

                    let width = img.width;
                    let height = img.height;

                    if (width > maxWidth || height > maxHeight) {
                        if (width > height) {
                            height *= maxWidth / width;
                            width = maxWidth;
                        } else {
                            width *= maxHeight / height;
                            height = maxHeight;
                        }
                    }

                    canvas.width = width;
                    canvas.height = height;
                    ctx.drawImage(img, 0, 0, width, height);

                    canvas.toBlob(blob => {
                        resolve(blob);
                    }, file.type, quality);
                };
                img.src = event.target.result;
            };
            reader.onerror = reject;
            reader.readAsDataURL(file);
        });
    }
</script>